<launch>
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="model" default="$(find raspimouse_description)/urdf/raspimouse_urg.urdf.xacro"/>
  <!--arg name="rvizconfig" default="$(find raspimouse_description)/rviz/test.rviz"/-->

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find raspimouse_gazebo)/worlds/camera_world_1.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>
  <!-- Parameters and nodes in the global namespace. -->
  <!-- <param name="camera_description" command="$(find xacro)/xacro '$(find raspimouse_description)/urdf/camera.xacro' camera_parent_name:=base_footprint"/> <node name="camera_spawner" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf
  -model camera_ -param camera_description"/> -->
  <!-- <param name="tf_prefix" value="raspi" /> -->
  <group ns="/raspimouse_on_gazebo">

    <param name="/raspimouse_on_gazebo/robot_description" command="$(find xacro)/xacro $(arg model)" />
    <!-- load the controllers -->
    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find raspimouse_description)/config/controller.yaml" command="load"/>

    <node name="raspimouse_controller_spawner" pkg="controller_manager" type="spawner"
       args="mobile_base_controller joint_state_controller">
    </node>
    <!-- convert joint states to TF transforms for rviz, etc -->
    <node pkg="robot_state_publisher" type="robot_state_publisher"  name="raspimouse_state_publisher">
      <param name="publish_frequency" type="double" value="50.0" />
      <!-- <remap from="robot_description" to="/raspimouse_on_gazebo/robot_description"/> -->
    </node>
<!--The package reads the robot_description parameter from the parameter server, finds all of the non-fixed joints and publishes a JointState message with all those joints defined
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" /> -->
  </group>

   <!-- push robot_description to factory and spawn robot in gazebo -->
    <node name="raspimouse_spawner" pkg="gazebo_ros" type="spawn_model"
          args="-x 0.5 -y 0.5 -z 0.1 -unpause -urdf -model robot -param /raspimouse_on_gazebo/robot_description" respawn="false" output="screen" launch-prefix="bash -c 'sleep 2.0; $0 $@' "/> <!-- agregue  .0 al 5-->
  
  
  <node name="rqt_robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering">
    <param name="default_topic" value="/raspimouse_on_gazebo/mobile_base_controller/cmd_vel"/>
  </node>

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)"/>
</launch>
